// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`shared -> components -> Survey render component correctly 1`] = `
<AUISurvey
  canDelete={true}
  changeQuestion={[Function]}
  containerClassName=""
  deleteQuestion={[Function]}
  isQuestionsChanged={false}
  questions={
    Array [
      Object {
        "answerFormat": "numbersOnly",
        "answerMaxLength": 100,
        "answerRequired": false,
        "answerType": "userEntry",
        "answers": Array [],
        "customquestionID": 524,
        "customquestionIndex": "184",
        "defaultAnswer": "",
        "hint": "",
        "isMainQuestion": true,
        "parentQuestionID": 0,
        "parentQuestionIndex": 0,
        "path": Array [
          0,
        ],
        "permitQuestion": true,
        "question": "numbersOnly",
        "readOnly": false,
        "title": "numbersOnly",
        "useAnswerCode": false,
      },
    ]
  }
  readOnly={false}
  showQuestions={true}
>
  <div>
    <div
      className="survey-container panel"
    >
      <h3
        className="survey-header"
      >
        Custom Question
        <i
          className="icon icon-chevron-up"
          onClick={[Function]}
        />
      </h3>
      <div
        className="header-section"
      >
        <div>
          <span>
            QUESTION DESCRIPTION
          </span>
        </div>
      </div>
      <div
        className="survey-body"
      >
        <Survey
          data={
            Array [
              Object {
                "answers": Array [],
                "errorMsgs": Array [],
                "format": 8,
                "hint": "",
                "icon": "icon-trash",
                "id": "184",
                "isShown": true,
                "maxLength": 100,
                "onChange": [Function],
                "onIconClick": [Function],
                "path": Array [
                  0,
                ],
                "placeHolder": "",
                "readonly": false,
                "required": false,
                "text": "numbersOnly",
                "type": 0,
                "value": "",
              },
            ]
          }
          onChange={[Function]}
          onIconClick={[Function]}
        >
          <div
            className="an-survey"
          >
            <Question
              answers={Array []}
              errorMsgs={Array []}
              format={8}
              hint=""
              icon="icon-trash"
              id="184"
              isShown={true}
              key="0"
              maxLength={100}
              onChange={[Function]}
              onIconClick={[Function]}
              path={
                Array [
                  0,
                ]
              }
              placeHolder=""
              readonly={false}
              required={false}
              text="numbersOnly"
              type={0}
              value=""
            >
              <div
                className="question aaui-flex"
                key="question_184"
              >
                <div
                  className="afx-col afx-xl-6-12 question-label"
                >
                  <div
                    className="question-label__name"
                  >
                    <span
                      className="icon-circle"
                    />
                    <SafeText
                      className=""
                      dangerMode={true}
                      data-qa-id=""
                      decode={true}
                      tagName="span"
                      text="numbersOnly"
                    >
                      <span
                        className=""
                        dangerouslySetInnerHTML={
                          Object {
                            "__html": "numbersOnly",
                          }
                        }
                        data-qa-id=""
                      />
                    </SafeText>
                  </div>
                  <div
                    className="question-label__hint"
                  >
                    <SafeText
                      dangerMode={true}
                      data-qa-id=""
                      decode={true}
                      tagName="span"
                      text=""
                    >
                      <span
                        dangerouslySetInnerHTML={
                          Object {
                            "__html": "",
                          }
                        }
                        data-qa-id=""
                      />
                    </SafeText>
                  </div>
                </div>
                <div
                  className="afx-col afx-xl-5-12 question-answer-container"
                >
                  <div
                    className="question-answer"
                  >
                    <Input
                      disabled={false}
                      formula={/\\\\d/}
                      icon={false}
                      inputRef={[Function]}
                      maxLength={100}
                      onBlur={[Function]}
                      onChange={[Function]}
                      placeholder=""
                      size="md"
                      type="text"
                      value=""
                    >
                      <div
                        className="input-group input-group--md"
                      >
                        <input
                          className="input input-group__field input__field"
                          disabled={false}
                          maxLength={100}
                          onBlur={[Function]}
                          onChange={[Function]}
                          onInput={[Function]}
                          onKeyPress={[Function]}
                          onPaste={[Function]}
                          placeholder=""
                          type="text"
                          value=""
                        />
                      </div>
                    </Input>
                  </div>
                </div>
                <div
                  className="afx-col afx-xl-1-12 question-icon"
                >
                  <span
                    className="icon icon-trash link"
                    onClick={[Function]}
                  />
                </div>
              </div>
            </Question>
          </div>
        </Survey>
      </div>
    </div>
  </div>
</AUISurvey>
`;

exports[`shared -> components -> Survey render component correctly when isQuestionsChanged is true 1`] = `
<AUISurvey
  canDelete={true}
  changeQuestion={[Function]}
  containerClassName=""
  deleteQuestion={[Function]}
  isQuestionsChanged={true}
  questions={
    Array [
      Object {
        "answerFormat": "numbersOnly",
        "answerMaxLength": 100,
        "answerRequired": false,
        "answerType": "userEntry",
        "answers": Array [],
        "customquestionID": 524,
        "customquestionIndex": "184",
        "defaultAnswer": "",
        "hint": "",
        "isMainQuestion": true,
        "parentQuestionID": 0,
        "parentQuestionIndex": 0,
        "path": Array [
          0,
        ],
        "permitQuestion": true,
        "question": "numbersOnly",
        "readOnly": false,
        "title": "numbersOnly",
        "useAnswerCode": false,
      },
    ]
  }
  readOnly={false}
  showQuestions={true}
>
  <div>
    <div
      className="survey-container panel"
    >
      <h3
        className="survey-header"
      >
        Custom Question
        <span
          className="update-changed-label"
        >
          UPDATED
        </span>
        <i
          className="icon icon-chevron-up"
          onClick={[Function]}
        />
      </h3>
      <div
        className="header-section"
      >
        <div>
          <span>
            QUESTION DESCRIPTION
          </span>
        </div>
      </div>
      <div
        className="survey-body"
      >
        <Survey
          data={
            Array [
              Object {
                "answers": Array [],
                "errorMsgs": Array [],
                "format": 8,
                "hint": "",
                "icon": "icon-trash",
                "id": "184",
                "isShown": true,
                "maxLength": 100,
                "onChange": [Function],
                "onIconClick": [Function],
                "path": Array [
                  0,
                ],
                "placeHolder": "",
                "readonly": false,
                "required": false,
                "text": "numbersOnly",
                "type": 0,
                "value": "",
              },
            ]
          }
          onChange={[Function]}
          onIconClick={[Function]}
        >
          <div
            className="an-survey"
          >
            <Question
              answers={Array []}
              errorMsgs={Array []}
              format={8}
              hint=""
              icon="icon-trash"
              id="184"
              isShown={true}
              key="0"
              maxLength={100}
              onChange={[Function]}
              onIconClick={[Function]}
              path={
                Array [
                  0,
                ]
              }
              placeHolder=""
              readonly={false}
              required={false}
              text="numbersOnly"
              type={0}
              value=""
            >
              <div
                className="question aaui-flex"
                key="question_184"
              >
                <div
                  className="afx-col afx-xl-6-12 question-label"
                >
                  <div
                    className="question-label__name"
                  >
                    <span
                      className="icon-circle"
                    />
                    <SafeText
                      className=""
                      dangerMode={true}
                      data-qa-id=""
                      decode={true}
                      tagName="span"
                      text="numbersOnly"
                    >
                      <span
                        className=""
                        dangerouslySetInnerHTML={
                          Object {
                            "__html": "numbersOnly",
                          }
                        }
                        data-qa-id=""
                      />
                    </SafeText>
                  </div>
                  <div
                    className="question-label__hint"
                  >
                    <SafeText
                      dangerMode={true}
                      data-qa-id=""
                      decode={true}
                      tagName="span"
                      text=""
                    >
                      <span
                        dangerouslySetInnerHTML={
                          Object {
                            "__html": "",
                          }
                        }
                        data-qa-id=""
                      />
                    </SafeText>
                  </div>
                </div>
                <div
                  className="afx-col afx-xl-5-12 question-answer-container"
                >
                  <div
                    className="question-answer"
                  >
                    <Input
                      disabled={false}
                      formula={/\\\\d/}
                      icon={false}
                      inputRef={[Function]}
                      maxLength={100}
                      onBlur={[Function]}
                      onChange={[Function]}
                      placeholder=""
                      size="md"
                      type="text"
                      value=""
                    >
                      <div
                        className="input-group input-group--md"
                      >
                        <input
                          className="input input-group__field input__field"
                          disabled={false}
                          maxLength={100}
                          onBlur={[Function]}
                          onChange={[Function]}
                          onInput={[Function]}
                          onKeyPress={[Function]}
                          onPaste={[Function]}
                          placeholder=""
                          type="text"
                          value=""
                        />
                      </div>
                    </Input>
                  </div>
                </div>
                <div
                  className="afx-col afx-xl-1-12 question-icon"
                >
                  <span
                    className="icon icon-trash link"
                    onClick={[Function]}
                  />
                </div>
              </div>
            </Question>
          </div>
        </Survey>
      </div>
    </div>
  </div>
</AUISurvey>
`;

exports[`shared -> components -> Survey render component correctly when questions is empty 1`] = `
<AUISurvey
  canDelete={true}
  changeQuestion={[Function]}
  containerClassName=""
  deleteQuestion={[Function]}
  isQuestionsChanged={false}
  questions={Array []}
  readOnly={false}
  showQuestions={true}
>
  <div>
    <div
      className="survey-container panel"
    >
      <h3
        className="survey-header"
      >
        Custom Question
        <i
          className="icon icon-chevron-up"
          onClick={[Function]}
        />
      </h3>
      <div
        className="header-section"
      >
        <div>
          <span>
            QUESTION DESCRIPTION
          </span>
        </div>
      </div>
      <div
        className="survey-body"
      >
        <Survey
          data={Array []}
          onChange={[Function]}
          onIconClick={[Function]}
        >
          <div
            className="an-survey"
          />
        </Survey>
      </div>
    </div>
  </div>
</AUISurvey>
`;

exports[`shared -> components -> Survey render component correctly when showQuestions is false 1`] = `
<AUISurvey
  canDelete={true}
  changeQuestion={[Function]}
  containerClassName=""
  deleteQuestion={[Function]}
  isQuestionsChanged={false}
  questions={
    Array [
      Object {
        "answerFormat": "numbersOnly",
        "answerMaxLength": 100,
        "answerRequired": false,
        "answerType": "userEntry",
        "answers": Array [],
        "customquestionID": 524,
        "customquestionIndex": "184",
        "defaultAnswer": "",
        "hint": "",
        "isMainQuestion": true,
        "parentQuestionID": 0,
        "parentQuestionIndex": 0,
        "path": Array [
          0,
        ],
        "permitQuestion": true,
        "question": "numbersOnly",
        "readOnly": false,
        "title": "numbersOnly",
        "useAnswerCode": false,
      },
    ]
  }
  readOnly={false}
  showQuestions={false}
>
  <div />
</AUISurvey>
`;
